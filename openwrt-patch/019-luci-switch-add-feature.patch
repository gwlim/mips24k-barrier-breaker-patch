--- ./feeds/luci/modules/admin-full/luasrc/model/cbi/admin_network/vlan.lua	2014-08-24 12:43:12.681332056 +0800
+++ ./feeds/luci/modules/admin-full/luasrc/model/cbi/admin_network/vlan.lua	2014-07-09 20:11:29.000000000 +0800
@@ -24,7 +24,9 @@ m.uci:foreach("network", "switch",
 		local has_vlan    = nil
 		local has_learn   = nil
 		local has_vlan4k  = nil
+		local has_qos     = nil
 		local has_jumbo3  = nil
+		local has_mirror  = nil
 		local min_vid     = 0
 		local max_vid     = 16
 		local num_vlans   = 16
@@ -68,12 +70,18 @@ m.uci:foreach("network", "switch",
 				elseif line:match(": enable_vlan4k") then
 					enable_vlan4k = true
 
+				elseif line:match(": enable_qos") then
+					has_qos = "enable_qos"
+
 				elseif line:match(": enable_vlan") then
 					has_vlan = "enable_vlan"
 
 				elseif line:match(": enable_learning") then
 					has_learn = "enable_learning"
 
+				elseif line:match(": enable_mirror_rx") then
+					has_mirror = "enable_mirror_rx"
+
 				elseif line:match(": max_length") then
 					has_jumbo3 = "max_length"
 				end
@@ -82,7 +90,6 @@ m.uci:foreach("network", "switch",
 			swc:close()
 		end
 
-
 		-- Switch properties
 		s = m:section(NamedSection, x['.name'], "switch",
 			switch_title and translatef("Switch %q (%s)", switch_name, switch_title)
@@ -99,12 +106,38 @@ m.uci:foreach("network", "switch",
 			x.default = x.enabled
 		end
 
+		if has_qos then
+		  	s:option(Flag, has_qos, translate("Enable QoS"))
+		end
+
 		if has_jumbo3 then
-			x = s:option(Flag, has_jumbo3, translate("Enable Jumbo Frame passthrough"))
-			x.enabled = "3"
-			x.rmempty = true
+			x = s:option(ListValue, has_jumbo3, translate("Enable Jumbo Frame passthrough"))
+			x:value("0", "1522")
+			x:value("1", "1536")
+			x:value("2", "1552")
+			x:value("3", "9216")
 		end
 
+		-- Does this switch support port mirroring?
+		if has_mirror then
+			s:option(Flag, "enable_mirror_rx", translate("Enable mirroring of incoming packets"))
+			s:option(Flag, "enable_mirror_tx", translate("Enable mirroring of outgoing packets"))
+			s:option(Flag, "enable_mirror_pause_frames", translate("Enable mirroring of incoming pause frames"))
+
+			local sp = s:option(ListValue, "mirror_source_port", translate("Mirror source port"))
+			local mp = s:option(ListValue, "mirror_monitor_port", translate("Mirror monitor port"))
+
+			local pt
+			for pt = 0, num_ports - 1 do
+				local name
+
+				name = (pt == cpu_port) and translate("CPU") or translatef("Port %d", pt)
+
+				sp:value(pt, name)
+				mp:value(pt, name)
+			end
+			s:option(Flag, "enable_monitor_isolation", translate("Enable monitor isolation"),translate("This prevents forwarding of packets sent to the mirror port"))
+		end
 
 		-- VLAN table
 		s = m:section(TypedSection, "switch_vlan",
