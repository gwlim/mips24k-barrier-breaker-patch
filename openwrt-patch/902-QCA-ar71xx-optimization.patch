--- /dev/null	2014-11-12 20:17:52.826310856 +0800
+++ ./target/linux/ar71xx/patches-3.10/901-QCA-add-more-register-defines.patch	2014-11-12 23:18:48.714175887 +0800
@@ -0,0 +1,364 @@
+Permission to use, copy, modify, and/or distribute this software for any
+purpose with or without fee is hereby granted, provided that the above
+copyright notice and this permission notice appear in all copies.
+
+THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
+WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
+ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
+WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
+ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
+OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+--- ./arch/mips/include/asm/mach-ath79/ar71xx_regs.h	2014-11-12 22:12:51.000000000 +0800
++++ ./arch/mips/include/asm/mach-ath79/ar71xx_regs.h	2014-11-12 23:14:54.207808839 +0800
+@@ -1,6 +1,7 @@
+ /*
+  *  Atheros AR71XX/AR724X/AR913X SoC register definitions
+  *
++ *  Copyright (c) 2013 Qualcomm Atheros, Inc.
+  *  Copyright (C) 2010-2011 Jaiganesh Narayanan <jnarayanan@atheros.com>
+  *  Copyright (C) 2008-2010 Gabor Juhos <juhosg@openwrt.org>
+  *  Copyright (C) 2008 Imre Kaloz <kaloz@openwrt.org>
+@@ -26,7 +27,7 @@
+ #define AR71XX_GE1_BASE		0x1a000000
+ #define AR71XX_GE1_SIZE		0x10000
+ #define AR71XX_EHCI_BASE	0x1b000000
+-#define AR71XX_EHCI_SIZE	0x1000
++#define AR71XX_EHCI_SIZE	0x200
+ #define AR71XX_OHCI_BASE	0x1c000000
+ #define AR71XX_OHCI_SIZE	0x1000
+ #define AR71XX_SPI_BASE		0x1f000000
+@@ -79,10 +80,10 @@
+ #define AR724X_PCI_CTRL_SIZE	0x100
+ 
+ #define AR724X_EHCI_BASE	0x1b000000
+-#define AR724X_EHCI_SIZE	0x1000
++#define AR724X_EHCI_SIZE	0x200
+ 
+ #define AR913X_EHCI_BASE	0x1b000000
+-#define AR913X_EHCI_SIZE	0x1000
++#define AR913X_EHCI_SIZE	0x200
+ #define AR913X_WMAC_BASE	(AR71XX_APB_BASE + 0x000C0000)
+ #define AR913X_WMAC_SIZE	0x30000
+ 
+@@ -93,14 +94,20 @@
+ #define AR933X_WMAC_BASE	(AR71XX_APB_BASE + 0x00100000)
+ #define AR933X_WMAC_SIZE	0x20000
+ #define AR933X_EHCI_BASE	0x1b000000
+-#define AR933X_EHCI_SIZE	0x1000
++#define AR933X_EHCI_SIZE	0x200
+ 
+ #define AR934X_GMAC_BASE	(AR71XX_APB_BASE + 0x00070000)
+ #define AR934X_GMAC_SIZE	0x14
+ #define AR934X_WMAC_BASE	(AR71XX_APB_BASE + 0x00100000)
+ #define AR934X_WMAC_SIZE	0x20000
++#define AR934X_AUD_DPLL_BASE	(AR71XX_APB_BASE + 0x00116200)
++#define AR934X_AUD_DPLL_SIZE	0x10
+ #define AR934X_EHCI_BASE	0x1b000000
+ #define AR934X_EHCI_SIZE	0x200
++#define AR934X_DMA_BASE		(AR71XX_APB_BASE + 0x000A0000)
++#define AR934X_DMA_SIZE		0x6C
++#define AR934X_STEREO_BASE	(AR71XX_APB_BASE + 0x000B0000)
++#define AR934X_STEREO_SIZE	0x18
+ #define AR934X_NFC_BASE		0x1b000200
+ #define AR934X_NFC_SIZE		0xb8
+ #define AR934X_SRIF_BASE	(AR71XX_APB_BASE + 0x00116000)
+@@ -249,6 +256,8 @@
+ #define AR934X_PLL_CPU_DDR_CLK_CTRL_REG		0x08
+ #define AR934X_PLL_SWITCH_CLOCK_CONTROL_REG	0x24
+ #define AR934X_PLL_ETH_XMII_CONTROL_REG		0x2c
++#define AR934X_PLL_AUDIO_CONFIG_REG		0x30
++#define AR934X_PLL_AUDIO_MOD_REG		0x34
+ 
+ #define AR934X_PLL_CPU_CONFIG_NFRAC_SHIFT	0
+ #define AR934X_PLL_CPU_CONFIG_NFRAC_MASK	0x3f
+@@ -357,6 +366,20 @@
+ #define QCA955X_PLL_CLK_CTRL_DDRCLK_FROM_DDRPLL		BIT(21)
+ #define QCA955X_PLL_CLK_CTRL_AHBCLK_FROM_DDRPLL		BIT(24)
+ 
++#define AR934X_PLL_AUDIO_CONFIG_EXT_DIV_SHIFT		12
++#define AR934X_PLL_AUDIO_CONFIG_EXT_DIV_MASK		0x7
++#define AR934X_PLL_AUDIO_CONFIG_POSTPLLPWD_SHIFT	7
++#define AR934X_PLL_AUDIO_CONFIG_POSTPLLPWD_MASK		0x7
++#define AR934X_PLL_AUDIO_CONFIG_PLLPWD			BIT(5)
++#define AR934X_PLL_AUDIO_CONFIG_BYPASS			BIT(4)
++#define AR934X_PLL_AUDIO_CONFIG_REFDIV_SHIFT		0
++#define AR934X_PLL_AUDIO_CONFIG_REFDIV_MASK		0xf
++
++#define AR934X_PLL_AUDIO_MOD_TGT_DIV_FRAC_SHIFT	11
++#define AR934X_PLL_AUDIO_MOD_TGT_DIV_FRAC_MASK	0x3ffff
++#define AR934X_PLL_AUDIO_MOD_TGT_DIV_INT_SHIFT	1
++#define AR934X_PLL_AUDIO_MOD_TGT_DIV_INT_MASK	0x3f
++
+ /*
+  * USB_CONFIG block
+  */
+@@ -676,12 +699,38 @@
+ #define AR71XX_GPIO_REG_INT_ENABLE	0x24
+ #define AR71XX_GPIO_REG_FUNC		0x28
+ 
++#define AR934X_GPIO_OUT_MUX_SPI_CS1		7
++#define AR934X_GPIO_OUT_MUX_SPI_CS2		8
++#define AR934X_GPIO_OUT_MUX_SPI_CS0		9
++#define AR934X_GPIO_OUT_MUX_SPI_CLK		10
++#define AR934X_GPIO_OUT_MUX_SPI_MOSI		11
++#define AR934X_GPIO_OUT_MUX_I2S_CLK		12
++#define AR934X_GPIO_OUT_MUX_I2S_WS		13
++#define AR934X_GPIO_OUT_MUX_I2S_SD		14
++#define AR934X_GPIO_OUT_MUX_I2S_MCK		15
++#define AR934X_GPIO_OUT_MUX_SPDIF_OUT		25
++#define AR934X_GPIO_IN_MUX_SPI_MISO		0
++#define AR934X_GPIO_IN_MUX_UART0_SIN		1
++#define AR934X_GPIO_IN_MUX_I2S_WS		4
++#define AR934X_GPIO_IN_MUX_I2S_MIC_SD		5
++#define AR934X_GPIO_IN_MUX_I2S_CLK		6
++#define AR934X_GPIO_IN_MUX_I2S_MCK		7
++#define AR934X_GPIO_IN_MUX_I2S_ETH_RX_ERR	8
++#define AR934X_GPIO_IN_MUX_I2S_ETH_RX_COL	9
++#define AR934X_GPIO_IN_MUX_I2S_ETH_RX_CRS	10
++
+ #define AR934X_GPIO_REG_OUT_FUNC0	0x2c
+ #define AR934X_GPIO_REG_OUT_FUNC1	0x30
+ #define AR934X_GPIO_REG_OUT_FUNC2	0x34
+ #define AR934X_GPIO_REG_OUT_FUNC3	0x38
+ #define AR934X_GPIO_REG_OUT_FUNC4	0x3c
+ #define AR934X_GPIO_REG_OUT_FUNC5	0x40
++#define AR934X_GPIO_REG_IN_ENABLE0	0x44
++#define AR934X_GPIO_REG_IN_ENABLE1	0x48
++#define AR934X_GPIO_REG_IN_ENABLE2	0x4C
++#define AR934X_GPIO_REG_IN_ENABLE3	0x50
++#define AR934X_GPIO_REG_IN_ENABLE4	0x54
++#define AR934X_GPIO_REG_IN_ENABLE9	0x68
+ #define AR934X_GPIO_REG_FUNC		0x6c
+ 
+ #define AR71XX_GPIO_COUNT		16
+@@ -858,4 +907,229 @@
+ #define QCA955X_ETH_CFG_RGMII_EN	BIT(0)
+ #define QCA955X_ETH_CFG_GE0_SGMII	BIT(6)
+ 
++ 
++/*
++ * DPLL block
++ */
++
++#define AR934X_DPLL_REG_1		0x00
++#define AR934X_DPLL_REG_2		0x04
++
++#define AR934X_DPLL_2_RANGE		BIT(31)
++#define AR934X_DPLL_2_KI_SHIFT		26
++#define AR934X_DPLL_2_KI_MASK		0xf
++#define AR934X_DPLL_2_KD_SHIFT		19
++#define AR934X_DPLL_2_KD_MASK		0x7f
++
++#define AR934X_DPLL_REG_3		0x08
++
++#define AR934X_DPLL_3_DO_MEAS		BIT(30)
++#define AR934X_DPLL_3_PHASESH_SHIFT	23
++#define AR934X_DPLL_3_PHASESH_MASK	0x7f
++#define AR934X_DPLL_3_SQSUM_DVC_SHIFT	3
++#define AR934X_DPLL_3_SQSUM_DVC_MASK	0xfffff
++
++#define AR934X_DPLL_REG_4		0x0c
++
++#define AR934X_DPLL_4_MEAS_DONE		BIT(3)
++
++
++/*
++ * DMA block (MBOX/PCM)
++ */
++#define AR934X_DMA_REG_MBOX_FIFO			0x00
++#define AR934X_DMA_REG_MBOX_FIFO_STATUS			0x08
++#define AR934X_DMA_REG_SLIC_MBOX_FIFO_STATUS		0x0c
++#define AR934X_DMA_REG_MBOX_DMA_POLICY			0x10
++
++#define AR934X_DMA_MBOX_DMA_POLICY_TX_FIFO_THRESH_SHIFT	4
++#define AR934X_DMA_MBOX_DMA_POLICY_TX_FIFO_THRESH_MASK	0xf
++#define AR934X_DMA_MBOX_DMA_POLICY_TX_QUANTUM		BIT(3)
++#define AR934X_DMA_MBOX_DMA_POLICY_RX_QUANTUM		BIT(1)
++
++#define AR934X_DMA_REG_SLIC_MBOX_DMA_POLICY		0x14
++#define AR934X_DMA_REG_MBOX0_DMA_RX_DESCRIPTOR_BASE	0x18
++#define AR934X_DMA_REG_MBOX0_DMA_RX_CONTROL		0x1c
++#define AR934X_DMA_REG_MBOX0_DMA_TX_DESCRIPTOR_BASE	0x20
++#define AR934X_DMA_REG_MBOX0_DMA_TX_CONTROL		0x24
++#define AR934X_DMA_REG_MBOX1_DMA_RX_DESCRIPTOR_BASE	0x28
++#define AR934X_DMA_REG_MBOX1_DMA_RX_CONTROL		0x2c
++#define AR934X_DMA_REG_MBOX1_DMA_TX_DESCRIPTOR_BASE	0x30
++#define AR934X_DMA_REG_MBOX1_DMA_TX_CONTROL		0x34
++
++#define AR934X_DMA_MBOX_DMA_CONTROL_RESUME		BIT(2)
++#define AR934X_DMA_MBOX_DMA_CONTROL_START		BIT(1)
++#define AR934X_DMA_MBOX_DMA_CONTROL_STOP		BIT(0)
++
++#define AR934X_DMA_REG_MBOX_FRAME			0x38
++#define AR934X_DMA_REG_SLIC_MBOX_FRAME			0x3c
++#define AR934X_DMA_REG_FIFO_TIMEOUT			0x40
++#define AR934X_DMA_REG_MBOX_INT_STATUS			0x44
++#define AR934X_DMA_REG_SLIC_MBOX_INT_STATUS		0x48
++
++#define AR934X_DMA_MBOX_INT_STATUS_RX_DMA_COMPLETE	BIT(10)
++#define AR934X_DMA_MBOX_INT_STATUS_TX_DMA_COMPLETE	BIT(6)
++
++#define AR934X_DMA_REG_MBOX_INT_ENABLE			0x4c
++#define AR934X_DMA_REG_SLIC_MBOX_INT_ENABLE		0x50
++
++#define AR934X_DMA_MBOX1_INT_RX_COMPLETE		BIT(11)
++#define AR934X_DMA_MBOX0_INT_RX_COMPLETE		BIT(10)
++#define AR934X_DMA_MBOX1_INT_TX_EOM_COMPLETE		BIT(9)
++#define AR934X_DMA_MBOX0_INT_TX_EOM_COMPLETE		BIT(8)
++#define AR934X_DMA_MBOX1_INT_TX_COMPLETE		BIT(7)
++#define AR934X_DMA_MBOX0_INT_TX_COMPLETE		BIT(6)
++
++#define AR934X_DMA_REG_MBOX_FIFO_RESET			0x58
++#define AR934X_DMA_REG_SLIC_MBOX_FIFO_RESET		0x5c
++
++#define AR934X_DMA_MBOX_FIFO_RESET_ALL			0xff
++#define AR934X_DMA_MBOX1_FIFO_RESET_RX			BIT(3)
++#define AR934X_DMA_MBOX0_FIFO_RESET_RX			BIT(2)
++#define AR934X_DMA_MBOX1_FIFO_RESET_TX			BIT(1)
++#define AR934X_DMA_MBOX0_FIFO_RESET_TX			BIT(0)
++
++/*
++ * STEREO block
++ */
++#define	AR934X_STEREO_REG_CONFIG			0x00
++
++#define	AR934X_STEREO_CONFIG_SPDIF_ENABLE		BIT(23)
++#define AR934X_STEREO_CONFIG_I2S_ENABLE			BIT(21)
++#define AR934X_STEREO_CONFIG_MIC_RESET			BIT(20)
++#define AR934X_STEREO_CONFIG_RESET			BIT(19)
++#define AR934X_STEREO_CONFIG_I2S_DELAY			BIT(18)
++#define AR934X_STEREO_CONFIG_PCM_SWAP			BIT(17)
++#define AR934X_STEREO_CONFIG_MIC_WORD_SIZE		BIT(16)
++#define AR934X_STEREO_CONFIG_STEREO_MONO_SHIFT		14
++#define AR934X_STEREO_CONFIG_STEREO_MONO_MASK		0x03
++#define AR934X_STEREO_CONFIG_STEREO_MONO_STEREO		0
++#define AR934X_STEREO_CONFIG_STEREO_MONO_CH0		1
++#define AR934X_STEREO_CONFIG_STEREO_MONO_CH1		2
++
++#define AR934X_STEREO_CONFIG_DATA_WORD_SIZE_SHIFT	12
++#define AR934X_STEREO_CONFIG_DATA_WORD_SIZE_MASK	0x03
++#define AR934X_STEREO_CONFIG_DATA_WORD_8		0
++#define AR934X_STEREO_CONFIG_DATA_WORD_16		1
++#define AR934X_STEREO_CONFIG_DATA_WORD_24		2
++#define AR934X_STEREO_CONFIG_DATA_WORD_32		3
++
++#define AR934X_STEREO_CONFIG_I2S_WORD_SIZE		BIT(11)
++#define AR934X_STEREO_CONFIG_MCK_SEL			BIT(10)
++#define AR934X_STEREO_CONFIG_SAMPLE_CNT_CLEAR_TYPE	BIT(9)
++#define AR934X_STEREO_CONFIG_MASTER			BIT(8)
++#define AR934X_STEREO_CONFIG_POSEDGE_SHIFT		0
++#define AR934X_STEREO_CONFIG_POSEDGE_MASK		0xff
++
++#define	AR934X_STEREO_REG_VOLUME			0x04
++
++#define AR934X_STEREO_VOLUME_CH0			8
++#define AR934X_STEREO_VOLUME_CH1			0
++#define AR934X_STEREO_VOLUME_MASK			0x1f
++
++#define	AR934X_STEREO_REG_MASTER_CLOCK			0x08
++#define	AR934X_STEREO_REG_TX_SAMPLE_CNT_LSB		0x0c
++#define	AR934X_STEREO_REG_TX_SAMPLE_CNT_MSB		0x10
++#define	AR934X_STEREO_REG_RX_SAMPLE_CNT_LSB		0x14
++#define	AR934X_STEREO_REG_RX_SAMPLE_CNT_MSB 		0x18
++
++/*
++ * NAND controller
++ */
++
++#define AR934X_NAND_REG_COMMAND          0x00
++#define AR934X_NAND_REG_CTRL             0x04
++#define AR934X_NAND_REG_STATUS           0x08
++#define AR934X_NAND_REG_INT_MASK         0x0c
++#define AR934X_NAND_REG_INT_STATUS       0x10
++#define AR934X_NAND_REG_ECC_CTRL         0x14
++#define AR934X_NAND_REG_ECC_OFFSET       0x18
++#define AR934X_NAND_REG_ADDR0_0          0x1c
++#define AR934X_NAND_REG_ADDR1_0          0x20
++#define AR934X_NAND_REG_ADDR0_1          0x24
++#define AR934X_NAND_REG_ADDR1_1          0x28
++#define AR934X_NAND_REG_SPARE_SIZE       0x30
++#define AR934X_NAND_REG_PROTECT          0x38
++#define AR934X_NAND_REG_LOOKUP_EN        0x40
++#define AR934X_NAND_REG_LOOKUP0          0x44
++#define AR934X_NAND_REG_LOOKUP1          0x48
++#define AR934X_NAND_REG_LOOKUP2          0x4c
++#define AR934X_NAND_REG_LOOKUP3          0x50
++#define AR934X_NAND_REG_LOOKUP4          0x54
++#define AR934X_NAND_REG_LOOKUP5          0x58
++#define AR934X_NAND_REG_LOOKUP6          0x5c
++#define AR934X_NAND_REG_LOOKUP7          0x60
++#define AR934X_NAND_REG_DMA_ADDR         0x64
++#define AR934X_NAND_REG_DMA_COUNT        0x68
++#define AR934X_NAND_REG_DMA_CTRL         0x6c
++#define AR934X_NAND_REG_MEM_CTRL         0x80
++#define AR934X_NAND_REG_PG_SIZE          0x84
++#define AR934X_NAND_REG_RD_STATUS        0x88
++#define AR934X_NAND_REG_TIME_SEQ         0x8c
++#define AR934X_NAND_REG_TIMINGS_ASYN     0x90
++#define AR934X_NAND_REG_TIMINGS_SYN      0x94
++#define AR934X_NAND_REG_FIFO_DATA        0x98
++#define AR934X_NAND_REG_TIME_MODE        0x9c
++#define AR934X_NAND_REG_DMA_ADDR_OFFSET  0xa0
++#define AR934X_NAND_REG_DMA_ADDR_OFFSET  0xa0
++#define AR934X_NAND_REG_FIFO_INIT        0xb0
++#define AR934X_NAND_REG_GENERIC_SEQ_CTRL 0xb4
++
++#define AR934X_NAND_DMA_DESCR_SIZE		8
++
++#define AR934X_NAND_TIMING_ASYN_SETTING		0x11
++#define AR934X_NAND_TIME_SEQ_SETTING		0x7fff
++#define AR934X_NAND_CTRL_CUSTOM_SIZE_EN		BIT(11)
++
++#define AR934X_NAND_CTRL_PAGE_SIZE_256		(0 <<  8)
++#define AR934X_NAND_CTRL_PAGE_SIZE_512		BIT(8)
++#define AR934X_NAND_CTRL_PAGE_SIZE_1024		(2 <<  8)
++#define AR934X_NAND_CTRL_PAGE_SIZE_2048		(3 <<  8)
++#define AR934X_NAND_CTRL_PAGE_SIZE_4096		(4 <<  8)
++#define AR934X_NAND_CTRL_PAGE_SIZE_8192		(5 <<  8)
++#define AR934X_NAND_CTRL_PAGE_SIZE_16384	(6 <<  8)
++#define AR934X_NAND_CTRL_PAGE_SIZE_0		(7 <<  8)
++
++#define AR934X_NAND_CTRL_BLOCK_SIZE_32		(0 <<  6)
++#define AR934X_NAND_CTRL_BLOCK_SIZE_64		BIT(6)
++#define AR934X_NAND_CTRL_BLOCK_SIZE_128		(2 <<  6)
++#define AR934X_NAND_CTRL_BLOCK_SIZE_256		(3 <<  6)
++
++#define AR934X_NAND_CTRL_ECC_EN			BIT(5)
++#define AR934X_NAND_CTRL_INT_EN			BIT(4)
++#define AR934X_NAND_CTRL_SPARE_EN		BIT(3)
++
++#define AR934X_NAND_CTRL_ADDR_CYCLE0(c)		((c) << 0)
++
++#define AR934X_NAND_DMA_CTRL_DMA_START		BIT(7)
++#define AR934X_NAND_DMA_CTRL_DMA_DIR_WRITE	(0 << 6)
++#define AR934X_NAND_DMA_CTRL_DMA_DIR_READ	BIT(6)
++#define AR934X_NAND_DMA_CTRL_DMA_MODE_SG	BIT(5)
++#define AR934X_NAND_DMA_CTRL_DMA_BURST_0	(0 << 2)
++#define AR934X_NAND_DMA_CTRL_DMA_BURST_1	BIT(2)
++#define AR934X_NAND_DMA_CTRL_DMA_BURST_2	(2 << 2)
++#define AR934X_NAND_DMA_CTRL_DMA_BURST_3	(3 << 2)
++#define AR934X_NAND_DMA_CTRL_DMA_BURST_4	(4 << 2)
++#define AR934X_NAND_DMA_CTRL_DMA_BURST_5	(5 << 2)
++#define AR934X_NAND_DMA_CTRL_ERR_FLAG		BIT(1)
++#define AR934X_NAND_DMA_CTRL_DMA_READY		BIT(0)
++
++#define AR934X_NAND_ECC_CTRL_ERR_THRESH(x)	(((x) << 8) & (0x1fu << 8))
++#define AR934X_NAND_ECC_CTRL_ECC_CAP(x)		(((x) << 5) & (0x07u << 5))
++#define AR934X_NAND_ECC_CTRL_ECC_2_BITS		AR934X_NAND_ECC_CTRL_ECC_CAP(0)
++#define AR934X_NAND_ECC_CTRL_ECC_4_BITS		AR934X_NAND_ECC_CTRL_ECC_CAP(1)
++#define AR934X_NAND_ECC_CTRL_ECC_6_BITS		AR934X_NAND_ECC_CTRL_ECC_CAP(2)
++#define AR934X_NAND_ECC_CTRL_ECC_8_BITS		AR934X_NAND_ECC_CTRL_ECC_CAP(3)
++#define AR934X_NAND_ECC_CTRL_ECC_10_BITS	AR934X_NAND_ECC_CTRL_ECC_CAP(4)
++#define AR934X_NAND_ECC_CTRL_ECC_12_BITS	AR934X_NAND_ECC_CTRL_ECC_CAP(5)
++#define AR934X_NAND_ECC_CTRL_ECC_14_BITS	AR934X_NAND_ECC_CTRL_ECC_CAP(6)
++#define AR934X_NAND_ECC_CTRL_ECC_16_BITS	AR934X_NAND_ECC_CTRL_ECC_CAP(7)
++#define AR934X_NAND_ECC_CORR_BITS(x)		(AR934X_NAND_ECC_CTRL_ERR_THRESH(x) | AR934X_NAND_ECC_CTRL_ECC_CAP(((x) / 2) - 1))
++#define AR934X_NAND_ECC_CTRL_ERR_OVER		BIT(2)
++#define AR934X_NAND_ECC_CTRL_ERR_UNCORR		BIT(1)
++#define AR934X_NAND_ECC_CTRL_ERR_CORR		BIT(0)
++#define AR934X_NAND_ECC_ERROR			(AR934X_NAND_ECC_CTRL_ERR_UNCORR | AR934X_NAND_ECC_CTRL_ERR_OVER)
++
++#define AR934X_NAND_CMD_END_INT		BIT(1)
++
+ #endif /* __ASM_MACH_AR71XX_REGS_H */
--- /dev/null	2014-11-12 20:17:52.826310856 +0800
+++ ./target/linux/ar71xx/patches-3.10/902-QCA-no-l2-cache-runtime-check.patch	2014-11-12 23:38:36.306128904 +0800
@@ -0,0 +1,31 @@
+--- ./arch/mips/include/asm/mach-ath79/cpu-feature-overrides.h	2014-11-12 22:12:50.000000000 +0800
++++ ./arch/mips/include/asm/mach-ath79/cpu-feature-overrides.h	2014-11-12 23:23:30.337019433 +0800
+@@ -22,23 +22,24 @@
+ #define cpu_has_4k_cache	1
+ #define cpu_has_tx39_cache	0
+ #define cpu_has_sb1_cache	0
++#define cpu_has_inclusive_pcaches	0
+ #define cpu_has_fpu		0
+ #define cpu_has_32fpr		0
+ #define cpu_has_counter		1
+-#define cpu_has_watch		1
++#define cpu_has_watch		1
+ #define cpu_has_divec		1
+ 
+ #define cpu_has_prefetch	1
+-#define cpu_has_ejtag		1
++#define cpu_has_ejtag		1
+ #define cpu_has_llsc		1
+ 
+-#define cpu_has_mips16		1
++#define cpu_has_mips16		0
+ #define cpu_has_mdmx		0
+ #define cpu_has_mips3d		0
+ #define cpu_has_smartmips	0
+ #define cpu_has_rixi		0
+ 
+-#define cpu_has_mips32r1	1
++#define cpu_has_mips32r1	0
+ #define cpu_has_mips32r2	1
+ #define cpu_has_mips64r1	0
+ #define cpu_has_mips64r2	0

--- /dev/null	2014-11-12 20:17:52.826310856 +0800
+++ ./target/linux/ar71xx/patches-3.10/904-QCA-ag71xx-change-tx-and-rx-ring-max-and-default.patch	2014-11-12 23:38:02.496790025 +0800
@@ -0,0 +1,26 @@
+From 675435ecaecbc21aa97064beda3f88d48db07d79 Mon Sep 17 00:00:00 2001
+From: Ben Menchaca <ben.menchaca@qca.qualcomm.com>
+Date: Fri, 7 Jun 2013 09:36:25 -0500
+Subject: [ag71xx] change tx and rx ring max and defaults
+
+At significant speed, we were frequently hitting ring full for TX,
+causing stalls and backpressure.  Doubling the default ring size
+prevents the issue.  However, rings that are too large begin to see
+a performance decrease as cache coolness effects begin to dominate.
+We set the maximums to these empirically determined values.
+
+--- ./drivers/net/ethernet/atheros/ag71xx/ag71xx.h	2014-11-12 22:03:44.000000000 +0800
++++ ./drivers/net/ethernet/atheros/ag71xx/ag71xx.h	2014-11-12 23:35:55.009512420 +0800
+@@ -55,10 +55,10 @@
+ #define AG71XX_TX_RING_SPLIT		512
+ #define AG71XX_TX_RING_DS_PER_PKT	DIV_ROUND_UP(AG71XX_TX_MTU_LEN, \
+ 						     AG71XX_TX_RING_SPLIT)
+-#define AG71XX_TX_RING_SIZE_DEFAULT	48
++#define AG71XX_TX_RING_SIZE_DEFAULT	128
+ #define AG71XX_RX_RING_SIZE_DEFAULT	128
+ 
+-#define AG71XX_TX_RING_SIZE_MAX		48
++#define AG71XX_TX_RING_SIZE_MAX		128
+ #define AG71XX_RX_RING_SIZE_MAX		128
+ 
+ #ifdef CONFIG_AG71XX_DEBUG
--- /dev/null	2014-11-12 20:17:52.826310856 +0800
+++ ./target/linux/ar71xx/patches-3.10/905-QCA-ag71xx-no-op-for-debug-all-optimization-levels.patch	2014-11-12 23:49:30.552690160 +0800
@@ -0,0 +1,31 @@
+From 11c3f6fc6b0f772df7abe75467615208e5f37672 Mon Sep 17 00:00:00 2001
+From: Ben Menchaca <ben.menchaca@qca.qualcomm.com>
+Date: Fri, 7 Jun 2013 11:20:00 -0500
+Subject: [ag71xx] no-op for debug all optimization levels
+
+Debug code was still generating instructions at some debug levels; this
+change ensures that no debug code is needlessly generated with debug
+disabled.
+
+--- ./drivers/net/ethernet/atheros/ag71xx/ag71xx_main.c	2014-11-12 22:03:44.000000000 +0800
++++ ./drivers/net/ethernet/atheros/ag71xx/ag71xx_main.c	2014-11-12 23:47:08.930270878 +0800
+@@ -35,6 +35,7 @@ static inline unsigned int ag71xx_max_fr
+ 	return ETH_SWITCH_HEADER_LEN + ETH_HLEN + VLAN_HLEN + mtu + ETH_FCS_LEN;
+ }
+ 
++#ifdef DEBUG
+ static void ag71xx_dump_dma_regs(struct ag71xx *ag)
+ {
+ 	DBG("%s: dma_tx_ctrl=%08x, dma_tx_desc=%08x, dma_tx_status=%08x\n",
+@@ -87,6 +88,11 @@ static inline void ag71xx_dump_intr(stru
+ 		(intr & AG71XX_INT_RX_OF) ? "RXOF " : "",
+ 		(intr & AG71XX_INT_RX_BE) ? "RXBE " : "");
+ }
++#else /* !DEBUG */
++#define ag71xx_dump_dma_regs(__ag)
++#define ag71xx_dump_regs(__ag)
++#define ag71xx_dump_intr(__ag, __label, __intr)
++#endif /* DEBUG */
+ 
+ static void ag71xx_ring_free(struct ag71xx_ring *ring)
+ {
--- /dev/null	2014-11-12 20:17:52.826310856 +0800
+++ ./target/linux/ar71xx/patches-3.10/908-QCA-reduce-napi-weight.patch	2014-11-13 00:58:19.005114565 +0800
@@ -0,0 +1,11 @@
+--- ./drivers/net/ethernet/atheros/ag71xx/ag71xx.h	2014-11-12 23:56:42.000000000 +0800
++++ ./drivers/net/ethernet/atheros/ag71xx/ag71xx.h	2014-11-13 00:06:28.542893466 +0800
+@@ -40,7 +40,7 @@
+ #define AG71XX_DRV_NAME		"ag71xx"
+ #define AG71XX_DRV_VERSION	"0.5.35"
+ 
+-#define AG71XX_NAPI_WEIGHT	64
++#define AG71XX_NAPI_WEIGHT	32
+ #define AG71XX_OOM_REFILL	(1 + HZ/10)
+ 
+ #define AG71XX_INT_ERR	(AG71XX_INT_RX_BE | AG71XX_INT_TX_BE)
--- /dev/null	2014-11-12 20:17:52.826310856 +0800
+++ ./target/linux/ar71xx/patches-3.10/909-QCA-ag71xx-cluster-align-structs-for-cache-perf.patch	2014-11-13 19:35:46.824308862 +0800
@@ -0,0 +1,28 @@
+--- ./drivers/net/ethernet/atheros/ag71xx/ag71xx.h	2014-11-13 01:27:47.000000000 +0800
++++ ./drivers/net/ethernet/atheros/ag71xx/ag71xx.h	2014-11-13 19:30:56.672351397 +0800
+@@ -147,20 +147,19 @@ struct ag71xx_debug {
+ };
+ 
+ struct ag71xx {
+-	void __iomem		*mac_base;
++	struct ag71xx_ring	rx_ring ____cacheline_aligned;
++	struct ag71xx_ring	tx_ring ____cacheline_aligned;
+ 
+-	spinlock_t		lock;
+-	struct platform_device	*pdev;
+ 	struct net_device	*dev;
++	struct platform_device	*pdev;
++	spinlock_t		lock;
+ 	struct napi_struct	napi;
++	void __iomem		*mac_base;
+ 	u32			msg_enable;
+ 
+ 	struct ag71xx_desc	*stop_desc;
+ 	dma_addr_t		stop_desc_dma;
+ 
+-	struct ag71xx_ring	rx_ring;
+-	struct ag71xx_ring	tx_ring;
+-
+ 	struct mii_bus		*mii_bus;
+ 	struct phy_device	*phy_dev;
+ 	void			*phy_priv;
--- /dev/null	2014-11-12 20:17:52.826310856 +0800
+++ ./target/linux/ar71xx/patches-3.10/918-QCA-netdev-inline-kfree_skbmem.patch	2014-11-13 19:36:21.247597312 +0800
@@ -0,0 +1,11 @@
+--- ./net/core/skbuff.c.orig	2014-11-13 01:27:35.000000000 +0800
++++ ./net/core/skbuff.c	2014-11-13 19:18:11.929854160 +0800
+@@ -530,7 +530,7 @@ static void skb_release_data(struct sk_b
+ /*
+  *	Free an skbuff by memory without cleaning the state.
+  */
+-static void kfree_skbmem(struct sk_buff *skb)
++static inline void kfree_skbmem(struct sk_buff *skb)
+ {
+ 	struct sk_buff *other;
+ 	atomic_t *fclone_ref;
--- /dev/null	2014-11-17 21:04:29.341198900 +0800
+++ ./target/linux/ar71xx/patches-3.10/903-QCA-ar71xx-efficient-cache-blast.patch	2014-11-17 23:07:44.779484803 +0800
@@ -0,0 +1,69 @@
+From 4f6fcee5deca31e059c73dcfd912d975e91d8c59 Mon Sep 17 00:00:00 2001
+From: Ben Menchaca <ben.menchaca@qca.qualcomm.com>
+Date: Fri, 7 Jun 2013 18:35:22 -0500
+Subject: [r4k_mips] efficient cache blast
+
+Optimize the compiler output for larger cache blast cases that are
+common for DMA-based networking.
+
+Signed-off-by: Ben Menchaca <ben.menchaca@qca.qualcomm.com>
+---
+ arch/mips/include/asm/r4kcache.h | 42 +++++++++++++++++++++++++++++++++++-----
+ 1 file changed, 37 insertions(+), 5 deletions(-)
+
+--- a/arch/mips/include/asm/r4kcache.h
++++ b/arch/mips/include/asm/r4kcache.h
+@@ -435,16 +435,48 @@ static inline void prot##extra##blast_##
+ 						    unsigned long end)	\
+ {									\
+ 	unsigned long lsize = cpu_##desc##_line_size();			\
++	unsigned long lsize_2 = lsize * 2;				\
++	unsigned long lsize_3 = lsize * 3;				\
++	unsigned long lsize_4 = lsize * 4;				\
++	unsigned long lsize_5 = lsize * 5;				\
++	unsigned long lsize_6 = lsize * 6;				\
++	unsigned long lsize_7 = lsize * 7;				\
++	unsigned long lsize_8 = lsize * 8;				\
+ 	unsigned long addr = start & ~(lsize - 1);			\
+-	unsigned long aend = (end - 1) & ~(lsize - 1);			\
++	unsigned long aend = (end + lsize - 1) & ~(lsize - 1);		\
++	int lines = (aend - addr) / lsize;				\
+ 									\
+ 	__##pfx##flush_prologue						\
+ 									\
+-	while (1) {							\
++	while (lines >= 8) {						\
++		prot##cache_op(hitop, addr);				\
++		prot##cache_op(hitop, addr + lsize);			\
++		prot##cache_op(hitop, addr + lsize_2);			\
++		prot##cache_op(hitop, addr + lsize_3);			\
++		prot##cache_op(hitop, addr + lsize_4);			\
++		prot##cache_op(hitop, addr + lsize_5);			\
++		prot##cache_op(hitop, addr + lsize_6);			\
++		prot##cache_op(hitop, addr + lsize_7);			\
++		addr += lsize_8;					\
++		lines -= 8;						\
++	}								\
++									\
++	if (lines & 0x4) {						\
++		prot##cache_op(hitop, addr);				\
++		prot##cache_op(hitop, addr + lsize);			\
++		prot##cache_op(hitop, addr + lsize_2);			\
++		prot##cache_op(hitop, addr + lsize_3);			\
++		addr += lsize_4;					\
++	}								\
++									\
++	if (lines & 0x2) {						\
++		prot##cache_op(hitop, addr);				\
++		prot##cache_op(hitop, addr + lsize);			\
++		addr += lsize_2;					\
++	}								\
++									\
++	if (lines & 0x1) {						\
+ 		prot##cache_op(hitop, addr);				\
+-		if (addr == aend)					\
+-			break;						\
+-		addr += lsize;						\
+ 	}								\
+ 									\
+ 	__##pfx##flush_epilogue						\
--- /dev/null	2015-06-05 22:22:04.700812748 +0800
+++ ./target/linux/ar71xx/patches-3.10/926-ag71xx-DMA-unmap-FROM_DEVICE-no-op-for-our-arch.patch	2015-06-06 11:23:14.078152840 +0800
@@ -0,0 +1,33 @@
+--- ./drivers/net/ethernet/atheros/ag71xx/ag71xx_main.c	2014-12-11 20:58:04.000000000 +0800
++++ ./drivers/net/ethernet/atheros/ag71xx/ag71xx_main.c	2014-12-12 19:47:28.634011163 +0800
+@@ -199,8 +199,6 @@ static void ag71xx_ring_rx_clean(struct
+ 
+ 	for (i = 0; i < ring->size; i++)
+ 		if (ring->buf[i].rx_buf) {
+-			dma_unmap_single(&ag->dev->dev, ring->buf[i].dma_addr,
+-					 ag->rx_buf_size, DMA_FROM_DEVICE);
+ 			kfree(ring->buf[i].rx_buf);
+ 		}
+ }
+
+@@ -797,9 +795,6 @@ static netdev_tx_t ag71xx_hard_start_xmi
+ 
+ 	return NETDEV_TX_OK;
+ 
+-err_drop_unmap:
+-	dma_unmap_single(&dev->dev, dma_addr, skb->len, DMA_TO_DEVICE);
+-
+ err_drop:
+ 	dev->stats.tx_dropped++;
+ 
+
+@@ -984,9 +984,6 @@ static int ag71xx_rx_packets(struct ag71
+ 		pktlen = desc->ctrl & pktlen_mask;
+ 		pktlen -= ETH_FCS_LEN;
+ 
+-		dma_unmap_single(&dev->dev, ring->buf[i].dma_addr,
+-				 ag->rx_buf_size, DMA_FROM_DEVICE);
+-
+ 		dev->stats.rx_packets++;
+ 		dev->stats.rx_bytes += pktlen;
+ 
